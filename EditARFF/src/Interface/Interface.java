/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import core.ARFFile;
import core.AttributeDetails;
import java.awt.Component;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import weka.core.Attribute;
import weka.core.Instances;
import weka.core.converters.ArffLoader;
import weka.core.converters.CSVLoader;

/**
 *
 * @author liac01
 */
public class Interface extends javax.swing.JFrame {

	private String psPath;
	private Instances dataset;
	ArrayList<AttributeDetails> attrDetails;
	
	/**
	 * Creates new form Interface
	 */
	public Interface()
	{
		initComponents();
		this.mxFormatTable();
		this.mxStateControls(0);
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel1 = new javax.swing.JPanel();
        cmbSelFil = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        txcName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txnNumInstances = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblAttributes = new javax.swing.JTable();
        cmbExit = new javax.swing.JButton();
        cmbGenerate = new javax.swing.JButton();
        cmbEdit = new javax.swing.JButton();
        cmbDetails = new javax.swing.JButton();
        cmbCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Generate ARFF File");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        cmbSelFil.setText("Select Files");
        cmbSelFil.setToolTipText("Select multiple folders than contain the documents. Each folder represent a class.");
        cmbSelFil.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mousePressed(java.awt.event.MouseEvent evt)
            {
                cmbSelFilMousePressed(evt);
            }
        });

        jLabel12.setText("Name:");

        txcName.setEditable(false);

        jLabel3.setText("# Instances:");

        txnNumInstances.setEditable(false);

        tblAttributes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {

            }
        ));
        jScrollPane2.setViewportView(tblAttributes);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txnNumInstances, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txcName))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(cmbSelFil)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 365, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cmbSelFil)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 152, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txnNumInstances, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txcName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(41, 41, 41)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(41, Short.MAX_VALUE)))
        );

        cmbExit.setText("Exit");
        cmbExit.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mousePressed(java.awt.event.MouseEvent evt)
            {
                cmbExitMousePressed(evt);
            }
        });

        cmbGenerate.setText("Generate");
        cmbGenerate.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mousePressed(java.awt.event.MouseEvent evt)
            {
                cmbGenerateMousePressed(evt);
            }
        });

        cmbEdit.setText("Edit");
        cmbEdit.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mousePressed(java.awt.event.MouseEvent evt)
            {
                cmbEditMousePressed(evt);
            }
        });

        cmbDetails.setText("Details");
        cmbDetails.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mousePressed(java.awt.event.MouseEvent evt)
            {
                cmbDetailsMousePressed(evt);
            }
        });

        cmbCancel.setText("Cancel");
        cmbCancel.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mousePressed(java.awt.event.MouseEvent evt)
            {
                cmbCancelMousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 187, Short.MAX_VALUE)
                        .addComponent(cmbCancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbGenerate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbExit, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbExit)
                    .addComponent(cmbGenerate)
                    .addComponent(cmbEdit)
                    .addComponent(cmbDetails)
                    .addComponent(cmbCancel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbSelFilMousePressed(java.awt.event.MouseEvent evt)//GEN-FIRST:event_cmbSelFilMousePressed
    {//GEN-HEADEREND:event_cmbSelFilMousePressed
        // TODO add your handling code here:
        this.mxSelectFile();
    }//GEN-LAST:event_cmbSelFilMousePressed

    private void cmbExitMousePressed(java.awt.event.MouseEvent evt)//GEN-FIRST:event_cmbExitMousePressed
    {//GEN-HEADEREND:event_cmbExitMousePressed
        this.dispose();
    }//GEN-LAST:event_cmbExitMousePressed

    private void cmbDetailsMousePressed(java.awt.event.MouseEvent evt)//GEN-FIRST:event_cmbDetailsMousePressed
    {//GEN-HEADEREND:event_cmbDetailsMousePressed
        int row = this.tblAttributes.getSelectedRow();
		if(row >= 0)
			this.mxLoadDetails(row);		
    }//GEN-LAST:event_cmbDetailsMousePressed

    private void cmbEditMousePressed(java.awt.event.MouseEvent evt)//GEN-FIRST:event_cmbEditMousePressed
    {//GEN-HEADEREND:event_cmbEditMousePressed
        int row = this.tblAttributes.getSelectedRow();
		if(row >= 0)
			this.mxEditAttribute(row);
    }//GEN-LAST:event_cmbEditMousePressed

    private void cmbGenerateMousePressed(java.awt.event.MouseEvent evt)//GEN-FIRST:event_cmbGenerateMousePressed
    {//GEN-HEADEREND:event_cmbGenerateMousePressed
        this.mxGenerateFile();
    }//GEN-LAST:event_cmbGenerateMousePressed

    private void cmbCancelMousePressed(java.awt.event.MouseEvent evt)//GEN-FIRST:event_cmbCancelMousePressed
    {//GEN-HEADEREND:event_cmbCancelMousePressed
        this.mxClear();
		this.mxFormatTable();
		this.mxStateControls(0);
		this.cmbSelFil.requestFocusInWindow();
    }//GEN-LAST:event_cmbCancelMousePressed

	private void mxClear()
	{
		this.txnNumInstances.setText("0");
		this.txcName.setText("");		
	}
	
	private void mxSelectFile()
	{
		boolean llOk = this.mxLoadFile();
		
		if(llOk)
        {  
            this.mxLoadDataSet();
			this.mxLoadAttributesDetails();
            this.mxLoadTable();
            this.mxStateControls(1);
        }
	}
	
	private boolean mxLoadFile()
    {
        JFileChooser loFileChooser = new JFileChooser();
        File loFileSelected;
        int lnResult;
              
        loFileChooser.setCurrentDirectory(new File("data"));//System.getProperty("user.home")));
        loFileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        loFileChooser.setMultiSelectionEnabled(false);
        loFileChooser.setAcceptAllFileFilterUsed(false);

        //Filter extensions
        loFileChooser.addChoosableFileFilter(new FileNameExtensionFilter("*.arff", "arff"));
        loFileChooser.addChoosableFileFilter(new FileNameExtensionFilter("*.csv", "csv"));
		
        lnResult = loFileChooser.showOpenDialog(this);

        if (lnResult == JFileChooser.APPROVE_OPTION) 
        {
            loFileSelected = loFileChooser.getSelectedFile();
            this.psPath = loFileSelected.getAbsolutePath();
            this.txcName.setText(loFileSelected.getName());
            return true;
        }
        
        return false;        
    }
	
	private void mxLoadDataSet()
	{
		String lsExtention;
        try
        {
            //Get extension to file
            lsExtention = this.mxGetExtension(this.psPath);

            switch(lsExtention)
            {
                case "csv":
					CSVLoader loaderCSV = new CSVLoader();
					loaderCSV.setSource(new File(this.psPath));
					this.dataset = loaderCSV.getDataSet();
					break;
				case "arff":
					ArffLoader loaderArff = new ArffLoader();
					loaderArff.setSource(new File(this.psPath));
					this.dataset = loaderArff.getDataSet();
                    break;
                default:
                    break;
			}
			
			this.txnNumInstances.setText("" + this.dataset.numInstances());
		}
		catch(Exception e)
        {
            
        }
	}
	
	private void mxFormatTable()
	{
		FormatTable formato = new FormatTable();
        this.tblAttributes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "Index","Attribute", "Type", "Details", "Edited", "Remove", "Normalize"
            }
        ) {
        Class[] types = new Class [] {
            java.lang.String.class, java.lang.String.class, java.lang.String.class, JButton.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class
            };

			boolean[] canEdit = new boolean[]{
                    false, false, false, true, false, true, true
            };
            @Override
            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
			@Override
			public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
			
			
        });
        
		this.tblAttributes.getColumnModel().getColumn(0).setPreferredWidth(20);
		this.tblAttributes.getColumnModel().getColumn(1).setPreferredWidth(120);
		this.tblAttributes.getColumnModel().getColumn(2).setPreferredWidth(60);
		this.tblAttributes.getColumnModel().getColumn(3).setPreferredWidth(50);
		this.tblAttributes.getColumnModel().getColumn(4).setPreferredWidth(25);
		this.tblAttributes.getColumnModel().getColumn(5).setPreferredWidth(30);
		this.tblAttributes.getColumnModel().getColumn(6).setPreferredWidth(30);
				
        this.tblAttributes.setDefaultRenderer(String.class, formato); 
        this.tblAttributes.setDefaultRenderer(Integer.class, formato);
        
        this.tblAttributes.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
        // El objetivo de la siguiente línea es indicar el CellRenderer que será utilizado para dibujar el botón
        this.tblAttributes.setDefaultRenderer(JButton.class, new TableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable jtable, Object objeto, boolean estaSeleccionado, boolean tieneElFoco, int fila, int columna) {
                return (Component) objeto;
            }
        });		
		
        this.tblAttributes.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int lnRow = tblAttributes.rowAtPoint(e.getPoint());
                int lnColumn = tblAttributes.columnAtPoint(e.getPoint());
				String nameCol = tblAttributes.getModel().getColumnName(lnColumn);
				
				if (nameCol.equals("Details")) 
				{
					mxLoadDetails(lnRow);
				}
				if (nameCol.equals("Remove") || nameCol.equals("Normalize")) 
				{
					mxIsGenerate();
				}
            }
        });
	}
	
	private void mxLoadTable()
	{
		int lnNumAttributes = this.dataset.numAttributes();
		
		for (int i = 0; i < lnNumAttributes; i++) {
			Attribute attribute = this.dataset.attribute(i);
			((DefaultTableModel)this.tblAttributes.getModel()).addRow(new Object[]{i, attribute.name(), attribute.type(), new JButton("Details"), false, false, false});
		}
	}
	
	private void mxStateControls(int state)
	{
		this.cmbDetails.setEnabled(false);
		this.cmbSelFil.setEnabled(false);
		this.cmbEdit.setEnabled(false);
		this.cmbGenerate.setEnabled(false);
		this.cmbCancel.setEnabled(false);
		
		switch(state)
		{
			case 0:
				this.cmbSelFil.setEnabled(true);
				break;
			case 1:
				this.cmbDetails.setEnabled(true);
				this.cmbEdit.setEnabled(true);
				this.cmbCancel.setEnabled(true);
				break;
			case 2:
				this.cmbDetails.setEnabled(true);
				this.cmbEdit.setEnabled(true);
				this.cmbGenerate.setEnabled(true);
				this.cmbCancel.setEnabled(true);
				break;
			default:
				break;
		}
	}
	
	private void mxLoadDetails(int attribute)
	{		
		Details loForm = new Details(this, true, this.attrDetails.get(attribute), 0, this.dataset);
		loForm.setVisible(true);
		loForm.setLocationRelativeTo(this);							
	}
	
	private void mxEditAttribute(int attribute)
	{
		Details loForm = new Details(this, true, this.attrDetails.get(attribute), 1, this.dataset);
		loForm.setVisible(true);
		loForm.setLocationRelativeTo(this);	
		
		if(loForm.getChanges())
		{
			this.attrDetails.set(attribute, loForm.getAttributeDetails());
			// Check Edited
			((DefaultTableModel)this.tblAttributes.getModel()).setValueAt(true , attribute, 4);
			// Attribute Type
			((DefaultTableModel)this.tblAttributes.getModel()).setValueAt(loForm.getAttributeDetails().getType() , attribute, 2);
			// Dataset
			this.dataset = loForm.getDataset();
			this.mxStateControls(2);
		}
	}
	
	private String mxGetExtension(String tsPath)
    {
        for (int i = tsPath.length() - 1; i > 0; i--) 
        {
            if(tsPath.charAt(i) == '.')
                return tsPath.substring(i + 1);
        }
        return "";
    }
	
	private void mxLoadAttributesDetails()
	{		
		this.attrDetails = new ArrayList<>();
		for (int i = 0; i < dataset.numAttributes(); i++) {
			this.attrDetails.add(new AttributeDetails(this.dataset, i));
		}
	}
	
	private void mxIsGenerate()
	{
		DefaultTableModel model = (DefaultTableModel)this.tblAttributes.getModel();
		
		for (int i = 0; i < this.tblAttributes.getRowCount(); i++) {
			if((boolean)(model.getValueAt(i, 4)) || (boolean)(model.getValueAt(i, 5)) || (boolean)(model.getValueAt(i, 6)))
			{
				this.mxStateControls(2);
				return;
			}
		}
		this.mxStateControls(1);
	}
	
	private void mxGenerateFile()
	{
		Instances data = new Instances(this.dataset);
		ARFFile arff = new ARFFile();
		arff.setDataset(data);
		DefaultTableModel model = (DefaultTableModel)this.tblAttributes.getModel();
		ArrayList<Integer> deleted = new ArrayList<>();
		
		for (int i = 0; i < this.tblAttributes.getRowCount(); i++) {
			if((boolean)(model.getValueAt(i, 5)))
				deleted.add(i);
		}
		arff.mxRemoveAttributes(deleted);
		
		String name = JOptionPane.showInputDialog(this, "Introduce a name for the file:");

		arff.generateFile(name + ".arff");
		
		JOptionPane.showMessageDialog(null, "The file was created successfully!");
	}
	
	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[])
	{
		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run()
			{
				new Interface().setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmbCancel;
    private javax.swing.JButton cmbDetails;
    private javax.swing.JButton cmbEdit;
    private javax.swing.JButton cmbExit;
    private javax.swing.JButton cmbGenerate;
    private javax.swing.JButton cmbSelFil;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblAttributes;
    private javax.swing.JTextField txcName;
    private javax.swing.JTextField txnNumInstances;
    // End of variables declaration//GEN-END:variables
}
